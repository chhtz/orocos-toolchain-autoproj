configuration_option 'rtt_target', 'string',
    :default => 'gnulinux',
    :possible_values => %w{gnulinux xenomai},
    :doc => "the target operating system for Orocos/RTT (gnulinux or xenomai)"

# Upgrade configuration: the old rtt_corba option has to be translated to 'none'
# for the CORBA implementation if it is false. Do not use Autoproj.user_config
# here as there might be some cases where autoproj will want to ask the option
# to the user (e.g. if --reconfigure is called)
if Autoproj.has_config_key?('rtt_corba') && !Autoproj.option_set['rtt_corba']
    Autoproj.change_option 'rtt_corba_implementation', 'none'
end
Autoproj.reset_option 'rtt_corba'

configuration_option 'rtt_corba_implementation', 'string',
    :default => "omniorb",
    :lowercase => true,
    :possible_values => %w{none tao omniorb},
    :doc => ["which CORBA implementation should the RTT use ?",
             "Answer 'none' to disable CORBA, otherwise pick either tao or omniorb"]

cmake_package 'rtt' do |pkg|
    pkg.always_reconfigure = true
    pkg.doc_dir = File.join('doc', 'api', 'html')
    pkg.with_doc('docapi')

    env_set 'OROCOS_TARGET', user_config('rtt_target')
    env_add 'CMAKE_PREFIX_PATH', pkg.prefix

    target = user_config('rtt_target')
    pkg.define "OROCOS_TARGET", target

    # Used by the oroGen handler
    pkg.provides "pkgconfig/orocos-rtt-#{target}"

    Autoproj.user_config('rtt_corba_implementation')


    # Disable building the test suite because it needs a lot of time and memory
    #
    # To reenable for your installation, add
    #   Autobuild::Package['rtt'].define "BUILD_TESTING", "ON"
    # to autoproj/overrides.rb
    pkg.define "BUILD_TESTING", "OFF"

    corba = user_config('rtt_corba_implementation')
    if corba == 'none'
        Autobuild::Orogen.corba = false
        pkg.define "ENABLE_CORBA", "OFF"
    else
        Autobuild::Orogen.corba = true
        pkg.define "ENABLE_CORBA", "YES"
        pkg.define "CORBA_IMPLEMENTATION", corba.upcase
        pkg.depends_on corba.downcase
    end
end

# Install the OCL only to get the task browser
cmake_package 'ocl' do |pkg|
    pkg.always_reconfigure = true
    pkg.doc_dir = File.join('doc', 'api', 'html')
    pkg.with_doc('docapi')

    target = user_config('rtt_target')
    pkg.define "OROCOS_TARGET", target
end

cmake_package "log4cpp"

ruby_package 'utilrb'
cmake_package 'utilmm'
cmake_package 'typelib' do |pkg|
    pkg.define "RUBY_EXECUTABLE", Autoproj.find_in_path(Config::CONFIG['RUBY_INSTALL_NAME'])
end
cmake_package 'rtt_typelib'
ruby_package 'orogen' do |pkg|
    pkg.provides "orogen"
    target = user_config('rtt_target')
    pkg.rake_setup_task = "setup[-DCMAKE_INSTALL_PREFIX=#{pkg.prefix} -DOROCOS_TARGET=#{target}]"
end

